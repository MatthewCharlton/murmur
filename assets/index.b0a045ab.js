import{t as p,a as w,b as l,i as a,S as b}from"./vendor.bb69e759.js";import r from"./index.90bf2a70.js";const f=p('<div class="fixed bottom-5 mx-5 right-0 z-10 bg-white border-2 p-4 max-w-md min-h-10">Install the murmur web app to enable background message updates so you can be notified when you get a new message<br><br> </div>'),i="murmur-pwa-install-decline";"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(async n=>{(await navigator.permissions.query({name:"periodic-background-sync"})).state==="granted"&&(console.log("ajioscbjcb"),"periodicSync"in n&&(console.log("registration",n),n.periodicSync.getTags().then(async t=>{if(console.log("tags",t),!t.includes("get-latest-messages"))try{await n.periodicSync.register("get-latest-messages",{minInterval:5*60*1e3})}catch{console.log("Periodic Sync could not be registered!")}})))});const y=()=>{const[n,o]=w(!1);let t;window.addEventListener("beforeinstallprompt",e=>{e.preventDefault();const s=Number(window?.localStorage?.getItem(i));s&&s+3*60*60*1e3>Date.now()||(t=e,setTimeout(()=>o(!0),1e3),console.log("'beforeinstallprompt' event was fired."))});const c=async()=>{o(!1),t.prompt();const{outcome:e}=await t.userChoice;console.log(`User response to the install prompt: ${e}`),t=null},d=()=>{console.log("decline pwa install"),window?.localStorage?.setItem(i,Date.now().toString()),o(!1)};return l(b,{get when(){return n()},get children(){const e=f.cloneNode(!0),s=e.firstChild,g=s.nextSibling,m=g.nextSibling,u=m.nextSibling;return a(e,l(r,{onClick:c,children:"Install murmur"}),u),a(e,l(r,{onClick:d,children:"Not now"}),null),e}})};export{y as default};
